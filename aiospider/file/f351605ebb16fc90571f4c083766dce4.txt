Sometime back in the early 1990s, when I was working as the chief technologist for a goofy little start-up outside Boston, I stumbled on , a novel by Eliyahu Goldratt, and I thought it was a revelation. In an era when it seemed that American business couldn’t do anything right,  seemed to offer a direction for revitalizing American manufacturing and the American economy as a whole.Many years later, a client suggested I read , by Gene Kim, Kevin Behr, and George Spafford, which is a beat-for-beat application of Goldratt’s book to enterprise IT infrastructure at a fictional company, Parts Unlimited, with an underperforming IT organization. Think of  as being to  what  is to  or, less darkly, what  is to . It was also a revelation, synthesizing a whole new way to think about infrastructure: faster, more responsive, and less bureaucratic.Gene Kim’s  is less a true sequel to  than a complement to it, focusing on application development at Parts Unlimited rather than infrastructure. Like , it is probably not as good a novel as , mostly because of its schematic characterizations. Everyone at the company either assists or hinders the protagonist in her quest to use technology innovation in the service of customer value. The villain is so villainous that I expected her to grow a mustache so she could twirl it, Snidely Whiplash style. How much more interesting it would have been to dig into why she wanted to slash IT costs.Literary elegance aside,  is full of interesting points and insights, especially on how dysfunctional enterprise IT can be. Here are a few points that really stood out:Kim made one point that is perhaps more surprising and unexpected than others. His protagonist passionately advocates for functional programming languages and styles as more effective in reducing complexity and dependencies than object-oriented languages. This bears more examination. really brings to life the challenges, dysfunction, excitement, and possibilities in a critical technology-development project. Yes, there a few over-simplifications. When did you last come across a major enterprise-technology project with not only a manual build process but also no documentation of that process whatsoever? And while I always love a good IT cost-management subplot, the book makes it sound a lot simpler than it actually is.All that is small beer. As essential as  is, its literary failings prevent it from being even more valuable. Real executives in real companies (and especially in real enterprise IT functions) can’t be divided into heroes who want to innovate and villains who resist new approaches. They make combinations of good and bad decisions, using emotional and rational decision mechanisms based on both idealistic and self-interested considerations. Digging a bit into this—and how to create the correlation of forces required for change—would have made an invaluable book even better.