
        
        
        
     from how a business runs to the products and services it sells, companies in industries ranging from retail to manufacturing to banking are having to develop a range of new skill sets and capabilities. In addition to mastering the nuances of their industry, they need to excel first and foremost at developing software.
	
It’s a big leap for many, yet a large number of businesses are working hard to make it. At the Goldman Sachs Group, for instance, computer engineers make up about one-quarter of the total workforce.


 Within retail, software development is the fastest-growing job category.


 Indeed, of the 20 million software engineers worldwide, more than half are estimated to be working outside the technology industry, and that percentage is growing.However, for the vast majority of businesses, these investments have not led to meaningful performance improvements. Launching a new product or feature can still take months. Leaders still struggle to scale promising sandbox innovations. We often hear CEOs, chief technology officers, and chief information officers lament that their software-development spending is a “black box.”Improving business performance through software development comes down to empowering developers, creating the right environment for them to innovate, and removing points of friction. Industry leaders refer to this capability as “Developer Velocity.” This goes beyond the definition of velocity as it relates to agile methodologies—meaning it is about not just speed but also unleashing the full potential of development talent.
        


    
    To gain a more precise understanding of the factors that allow organizations to achieve Developer Velocity, we conducted an in-depth survey of senior executives at 440 large enterprises, more than 100 expert interviews, and extensive external research (see sidebar, “About the research”). As a result, we created what we call the Developer Velocity Index (DVI), which pinpoints the most critical factors (related to technology, working practices, and organizational enablement) in achieving Developer Velocity, as well as those that are not nearly as important as many executives and observers might believe.What really does (and does not) account for business successOur research reveals that top-quartile DVI scores correlate with 2014–18 revenue growth that is four to five times faster than bottom-quartile DVI scores (Exhibit 1). Top-quartile companies also have 60 percent higher total shareholder returns and 20 percent higher operating margins. In addition, top-quartile players appear to be more innovative, scoring 55 percent higher on innovation than  bottom-quartile companies. These businesses also score higher on customer satisfaction, brand perception, and talent management (Exhibit 2).
    

    
Similar patterns hold within specific industries and sectors. For example, top-quartile software companies saw revenue grow almost two times faster than other software companies in the same period. In financial services and retail, top-quartile companies saw positive revenue growth while average revenue declined in the other quartiles.While the link between Developer Velocity and business performance cuts across all industries, not surprisingly, sectors that are more digitally mature—including software (naturally), discrete manufacturing, and financial services—have higher DVI scores overall (Exhibit 3).
    
To take it a step further, we analyzed 13 capabilities (composed of 46 individual performance drivers) to better understand the specific conditions that create high Developer Velocity. We found the four with the greatest impact on business performance are tools, culture, product management, and talent management (Exhibit 4). These four areas are also strongly correlated with each other—that is, top performers with high scores in one capability tend to also have high scores in the other three. 
    
The companies that have mastered Developer Velocity focus equally on empowering the developer, anticipating critical enablers, aligning investments with customer value, and minimizing barriers to productivity.Interestingly, these findings fly in the face of conventional industry wisdom. For example, many of the business leaders we interviewed assumed agile ceremonies at a team level would be among the top enablers of software development. But while agile team practices are helpful (especially in lifting performance among third- and fourth-quartile players), our study finds they do not play an outsized role in advancing DVI scores beyond that. The other outlier was developer tools. Our research shows that best-in-class tools are the top contributor to business success—enabling greater productivity, visibility, and coordination. Yet only 5 percent of executives recognized this link and ranked tools among their top-three software enablers. The underinvestment in tools across the development life cycle is one reason so many companies struggle with “black box” issues. How to improve Developer VelocityWhy the disconnect between what leaders think drives software success and what actually does? One answer is that relatively few leaders understand the day-to-day developer experience. Another challenge is prioritizing investment among the large and diverse set of levers. Several actions can help address the four biggest factors in Developer Velocity: tools, culture, product management, and talent management.Empowering developers with world-class toolsAccording to our research, best-in-class tools are the primary driver of Developer Velocity. Organizations with strong tools—for planning, development (for example, integrated development environments), collaboration, and continuous integration and delivery—are 65 percent more innovative than bottom-quartile companies. The ability to access relevant tools for each stage of the software life cycle contributes to developer satisfaction and retention rates that are 47 percent higher for top-quartile companies compared with bottom-quartile performers.Top-quartile companies give developers a degree of choice—usually between two and five options to account for different needs and preferences—but restrict ad hoc tools from being added. Leading companies also use tools to unleash Developer Velocity by investing in low-code and no-code platforms. These platforms enable the average business user to develop applications without any software experience, freeing up seasoned developers to focus on the most challenging tasks. For example, one pharmaceutical company grew its low-code platform base from eight users to 1,400 in just one year. Business users outside of IT are now building applications with thousands of monthly sessions. The companies in our survey that empower “citizen developers” in these sorts of ways score 33 percent higher on innovation compared with bottom-quartile companies.
		
	
Creating a culture that fosters psychological safetyOrganizations that enable software teams to experiment, fail, and learn in a safe environment see consistently better results. Knowledge sharing, continuous improvement, a servant-leadership mindset (that is, managers viewing their role as empowering their teams to be successful rather than simply overseeing them), and a customer-centric philosophy are all correlated with superior business performance. But far and away the most important cultural attribute is psychological safety—a shared belief that risk-taking in the pursuit of innovative problem-solving is permitted and protected.Although most executives recognize the importance of psychological safety, only 20 percent believe their organization has succeeded in creating this culture. The chief information officer of a leading multinational bank told us that learning how to fail was the most difficult part of the company’s transition to mobile banking.Companies that perform best at this aspect of cultural change also invest in systems that can absorb and minimize the cost of failures. These investments include capabilities such as controlled releases, feature flags (the ability to turn features on and off without redeploying code), and automated rollbacks, as well as postmortems and retrospectives that allow teams to reflect constructively on what worked and what did not. A software leader at one top-quartile company said, “You need to implement safeguards in order to embrace failure, so we build contingencies as part of the software-development process. For example, we install a new version side by side with the stable version.”In addition to promoting psychological safety, companies with high DVI scores more frequently recognize employees for their achievements, publicly acknowledging individual and team efforts and rewarding outstanding contributions. They also build strong communities of practice through, for example, regular, brown-bag meetups on specific topics. And they create processes that allow teams to engage more directly with the customer—for instance, through demos and site visits.
    
Creating a comprehensive product-management functionProduct management means more than simply ensuring on-time and on-budget releases. It is about ensuring that the right products are built in the right ways to deliver a compelling customer experience.


 The importance of delivering this kind of experience is why the product-management function has become so critical over the past decade and why these capabilities rank as the third-leading driver of Developer Velocity.Our research examined six dimensions of product management—customer experience, strategic skills, business acumen, technical skills, leadership skills, and organizational enablers (such as mechanisms that assist with strategic prioritization, funding, and the adoption of product telemetry). The results show that DVI scores are less sensitive to  individual attributes and far more responsive to an integrated, balanced product-management function. The product-management team not only needs relevant business and market knowledge but also a strong technical background. Companies with above-average performance across the six dimensions have DVI scores 1.5 times higher than companies with top-quartile performance in just one or two dimensions. It is important to note that excellent product management is also not about the discrete product-management team; developers and other members of an agile team are increasingly wearing the product-manager hat to understand how their work is aligned with business priorities and customer needs.
		
	
Focusing talent management on the developer experienceThe world of technology has long been fixated on the idea of rock-star developers: individuals capable of producing at ten times the rate of the average developer. While debate exists over the size of the exponential, there is little question that the most talented developers are engines of velocity in their own right. With developers and related roles in high demand, the challenge is how to attract and retain such talent and create the conditions that ensure their continued success. Our study found that the talent factors most correlated with high rates of Developer Velocity—in addition to the impact of tools on talent outcomes as discussed earlier—are incentives, multifaceted recruiting programs, a rich program of ongoing learning, well-defined engineering career paths, and an active measurement of team health.Leading companies are resourceful when it comes to keeping software talent happy and motivated. One leading telecom company offers a wide range of skills certifications or “microbadges,” from beginner’s-level mobile development to machine learning. It also created a Developer University to provide developers with fresh learning opportunities and the chance to apply these skills in their workplace. Best-in-class companies also recognize the role that team health plays in boosting productivity and retention. They take the pulse of their developer teams on a regular basis—for example, after every one or two sprints. Surveys, whiteboard notes, and visual dashboards provide instant feedback that teams can use to address issues and refine processes quickly. Comprehensive annual or biannual employee surveys augment the more frequent check-ins, going deeper into topics such as shared vision, leadership, motivation, and incentives.Beyond the foundations: Open-source and public-cloud adoption and a set of emerging driversWhile the four core drivers apply across the entire group of companies surveyed, a different driver emerged as the biggest differentiator for companies within the top quartile: open-source adoption. For organizations that already have a strong DVI score, open-source adoption acts as a major accelerator. The data show that top-quartile company adoption of open source has three times the impact on innovation as compared with companies in other quartiles. Top-quartile DVI companies are especially active adopters, scoring 36 percent higher on open-source adoption than the next quartile—the highest delta on any dimension studied. We found that building an open-source culture is about more than using open-source software within the code; it extends to encouraging contribution and participation in the open-source community as well as adopting a similar approach to how code is shared internally—that is, strong InnerSource adoption.Another notable distinction is that DVI leaders are more advanced in managing open-source development securely. Many are using centralized security management and automated tools that can scan open-source components and remediate vulnerabilities before deployment. Compared
with these leading adopters, less than 20 percent of companies are employing these advanced security measures.Public-cloud adoption as a catalyst of Developer Velocity is especially strong for nonsoftware companies—public-cloud adoption has four times the impact on their business performance than it does for software companies. Developer Velocity benefits are also sharply correlated with the degree of adoption: companies in the top quartile of public-cloud adoption have DVI scores that are 32 percent higher than companies in the bottom quartile. By comparison, a partial shift returns significantly less benefit: companies in the third quartile gain only a 2 percent DVI score advantage over the lowest adopters.The analysis also identified emerging drivers with the potential to accelerate DVI scores over the next three to five years. Top-quartile companies are increasingly exploring the use of artificial intelligence (AI) and machine learning in developer tools. For example, some have begun using AI to perform aspects of pair programming (in which typically one developer writes code while another almost simultaneously reviews it), providing automated code reviews and using natural language processing in low-code tools. Additional areas that executives believe will accelerate software innovation and impact in the future include increased usage of product telemetry to make product decisions and automation in detecting and remediating production issues.Improving Developer Velocity is a journey, not a race. The businesses that are achieving the greatest returns from their software investment are those willing to tackle the entrenched cultural and structural barriers that are often the hardest and most nebulous to address. Companies that excel in providing the right tools, culture, product management, and talent management not only develop software faster but also deliver significantly stronger business outcomes.