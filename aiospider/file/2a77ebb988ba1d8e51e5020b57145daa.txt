    



 greatly accelerated corporate digital transformations, the importance of software development to business performance had already grown significantly. Early last year, we researched more than 400 companies to quantify this importance and found a clear link between unleashing the full potential of developers and business success. In the process, we created the Developer Velocity index, a holistic measure of a company’s software development capabilities that pinpoints the most critical factors (related to technology, working practices, and organizational enablement) for software excellence. And indeed, companies in the top quartile of Developer Velocity Index scores outperformed bottom-quartile peers by up to five times on their 2014–2018 revenue growth.


More recently, we took a deeper look at a small number of companies in two major industries outside of software to better understand how they build their own high-performing development organizations. We focused on software leaders in banking and retail, two sectors that have experienced some of the biggest uptick in demand for digital services during the pandemic. In particular, we studied three global banks and two retailers, each with revenues greater than $20 billion and boasting their own large in -house development teams. While increasing their commitments to software investments in 2020, these companies have made building world-class software products a central mission over the past few years, and faced similar challenges in the process.Every company is unique, but the experiences of those we studied offer valuable lessons for companies across industries as they strive for software development success—and for providers of software tools and cloud services that support companies’ development teams. These lessons broadly fall into three categories: 1) the modernization of technology, 2) the architecture and engineering practices that facilitate the work of high-performing talent, and 3) the importance of the development organization’s maturity to attracting and building talent.Commit to modernizing technologyOur research revealed important insights about the technology drivers behind high-performing development organizations. First, choosing the right mix of development tools is critical, for multiple reasons. Also, the companies we studied kept security and risk top of mind, embedding automated controls throughout the pipeline. Finally, commitment to the business case behind cloud adoption is crucial.Balancing flexibility and consistency for developer tools is criticalAs development teams move to the cloud and look to adopt modern agile and continuous integration and continuous development (CI/CD) practices, available tools have proliferated. The companies we studied used 30-50 tools. Indeed, one of the most common challenges leaders face is striking the right balance between giving teams flexibility to choose their tools and maintaining required levels of consistency and standardization. One of the companies we studied had hundreds of pipelines because each team was given autonomy to build their own in the early days of the software transformation. This situation caused challenges with security and quality and created technological hurdles to collaboration between teams.Based on our research, the right balance appears to be to standardize in a few key areas, such as the CI/CD pipeline and planning and code management tools. Standardizing pipelines can actually create a higher sense of autonomy because it gives developers the confidence to rapidly make changes and push new code to production. For example, one organization was able to reduce the time required for regression testing (used to ensure that code changes did not negatively impact existing software) by more than 95 percent after automating CI/CD pipelines.
    
Standardizing planning and code management can also create high organizational agility. One organization adopted a standard end-to-end product taxonomy, starting with top-level business initiatives and extending to individual user stories (descriptions of features, usually from the perspective of an end user). Leaders then configured their planning tools to reflect this common taxonomy. This approach created transparency on progress to outcomes and on dependencies. Consistent planning and code-management tools also helped a retailer significantly improve its ability to manage dependencies between teams working on front-end experiences such as mobile app and teams working on underlying platforms.
		
	
Data and security capabilities unlock the next level of performanceCompared to applications, data architecture and platforms (the technologies that help manage the data life cycle from acquisition to analytics and visualization) have received less investments, even for companies with high DVI scores. However, the companies we studied recognize the gap and are making data a top priority through 2022. This commitment includes consolidated data pipelines, low-to-no duplication of databases, and common data models. They are also building new supportive capabilities such as data governance processes to handle GDPR requests, for example, embedding data scientists and engineers into agile teams, and training development teams on topics such as responsible AI.Security has also typically not received as much attention as applications. Companies with top DVI scores are responding with investments in DevSecOps practices, which build security considerations into every part of development. For instance, teams may focus on automating and embedding security controls within the CI/CD pipelines instead of relying on manual compliance processes. Teams may also include a focus on shift-left practices—moving responsibility for security from a small group of dedicated experts to everyone who touches the product, especially developers, architects, and product managers.Cloud adoption requires a partnership between business and techBusiness and technology leaders should partner to create  that clearly focuses on business outcomes. To achieve this goal, high-performing companies start by articulating the cloud’s impact on business metrics, from increased agility to speed of innovation. This approach sharply contrasts with framing cloud migration as a technology initiative, with goals such as increased infrastructure efficiency. Such tech-focused targets tend to underperform or encounter significant delays as new business initiatives take priority.While the decision on when and how fast to move to the cloud often comes from leadership—and requires top-down commitment that starts with the CEO—top performing companies give individual teams autonomy on their specific migration path. For example, a leading US bank took a domain-by-domain approach to cloud migration and gave each domain team an 18- to 24-month timeline and flexibility on their architectural approach and choice of tools and cloud services.Companies with successful migrations typically create guidelines and requirements within which teams can work, such as a recommended migration path that is easy for most teams to follow. The cloud center of excellence (CoE) at a leading retailer defined a recommended cloud migration path and foundational cloud services. Experts at the CoE also provided coaching and migration support for teams. Crucially, the CoE set requirements on measures such as security, quality, availability, and performance that applied to every team.These investments made a meaningful impact to the pace of cloud adoption and the business performance of the companies we studied. For example, a leading US bank moved almost 80 percent of its workloads to cloud. Similarly, a grocer transitioned 70 percent of its customer-facing e-commerce stack to the public cloud on a 24-36 month timeline. As a result, it was able to handle a tenfold increase in e-commerce order volumes and grow its digital sales by over 200 percent in 2020 after the COVID-19 crisis began.Adopt architecture and engineering practices that support developers’ workThe companies we studied fueled their development organizations’ performance by adopting the software architecture that would help agile-driven tech transformations succeed. Participating in open-source communities and borrowing their practices (known as “inner source”) also improve developers’ experience and work quality.Architecture and agile need to go together for impactLoosely coupled architecture, in which different components of the system do not depend on other components, is crucial to realizing the full benefits of an agile transformation. Without it, developers will be slowed by dependencies across teams, time required to stabilize or integrate codebases after development, and a lack of team-level ownership and accountability. For that reason, one organization recognized and publicly declared early in its transformation that an agile transformation also meant architecture modernization. The organization invested in architecture based in micro-services and APIs before even hiring the first agile coach. Similarly, a retailer was able to reduce launch cycles for customer features by 85 percent and transition to a two-week deployment cycle, down from two months, by shifting to a micro-services based architecture in parallel to adopting agile practices.
		
	
Open source adoption matters—not just usage but contribution as wellAs companies’ development capabilities mature, open source becomes more important. Our initial research showed that open source adoption has three times the impact on innovation at companies with top-quartile DVI scores compared to other companies.


 Our newest findings are consistent with this insight—the company with the highest DVI score also had the highest open source adoption.Significantly, what matters is not just open-source usage but contributions. Companies that both use and contribute to open-source code can use it as a recruiting tool to attract and retain top talent; developers prize the ability to contribute to open-source projects because it helps them connect with a broader peer community, learn the newest technologies, and build their individual technical reputations.The success of open source has spurred the companies we studied to explore inner source. Although inner source is considered a high priority, it is nascent even at companies with top DVI scores. Companies should set the stage for success by laying the technical foundation—such as making code easily searchable, using fewer coding languages—and building a culture of code re-use.
    
Build organizations that attract and shape the right talentThe final set of lessons from our most recent research has to do with organizations’ roles as magnets and developers of talent. For companies with more mature development organizations, the next step will be to build a more effective product management function.Companies can attract top talent by emphasizing their real-world value propositionTalent is a top-four driver of business performance.


 Successful companies make technical talent a C-suite priority and articulate a distinctive value proposition to appeal to that talent. For instance, a leading retailer highlighted the opportunity for developers to solve problems that affect millions of consumers, especially in the context of the COVID-19 crisis. Banks and retailers that are successfully competing against software companies for talent also tend to leverage their brand recognition to extend existing—and often strong—campus hiring programs into technical fields. These companies also connect with developer communities where talent already gathers—for example, through meetups and sponsored hackathons. Crucially, more companies can highlight the developers’ unique value at non-software companies compared to companies that are already developer dominated.
    
Product management remains a stumbling block even for the bestProduct management is another top-four driver of DVI.


 The companies we studied created a product manager (PM) or product owner (PO) role early in their initial transformation, often simply re-branded from an existing role in business. The intention was to closely connect the business and technology functions, and the approach often brought early benefits. However, we saw the majority of the research participants’ evolution plateau at this point, blocking or impeding their transition to functioning like digital-native companies.One common pitfall we observed is a failure to round out PMs’ business skills with skills in experience design and technology. Companies that avoid this pitfall hire people with experience as PMs at software companies and guide current PMs with additional learning. Similar to the strategy deployed to attract developers, these companies emphasize the ability to work on concrete problems at scale and to own an end-to-end digital experience instead of a small feature of a bigger product.Successful companies also invest in the end-to-end operating model for the product management function. This model includes a holistic definition of products that covers any software that creates value for an internal or external user; long-term product road maps; specific product artifacts; review processes that emphasize product outcomes; and experimentation and usage data to refine offerings.The second phase of our research on Developer Velocity identified five high-performing companies’ best practices around technology, talent, and organizations. Our findings offer an important lesson for all: despite these organizations’ outperformance in these areas, even they still struggle to refine data management, to build in security, and to set up a well-rounded PM function. Tech leaders should build on this knowledge, striking the right balance between priorities such as standardization and autonomy and building a partnership with business leaders. Above all, they should follow the insights and take appropriate action to develop their own Developer Velocity.